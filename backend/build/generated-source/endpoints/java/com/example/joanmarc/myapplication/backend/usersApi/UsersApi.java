/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-03-26 20:30:19 UTC)
 * on 2015-05-05 at 09:43:05 UTC 
 * Modify at your own risk.
 */

package com.example.joanmarc.myapplication.backend.usersApi;

/**
 * Service definition for UsersApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link UsersApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class UsersApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the usersApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "usersApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public UsersApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  UsersApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getUsers".
   *
   * This request holds the parameters needed by the usersApi server.  After setting any optional
   * parameters, call the {@link GetUsers#execute()} method to invoke the remote operation.
   *
   * @param userName
   * @return the request
   */
  public GetUsers getUsers(java.lang.String userName) throws java.io.IOException {
    GetUsers result = new GetUsers(userName);
    initialize(result);
    return result;
  }

  public class GetUsers extends UsersApiRequest<com.example.joanmarc.myapplication.backend.usersApi.model.Users> {

    private static final String REST_PATH = "users/{userName}";

    /**
     * Create a request for the method "getUsers".
     *
     * This request holds the parameters needed by the the usersApi server.  After setting any
     * optional parameters, call the {@link GetUsers#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetUsers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param userName
     * @since 1.13
     */
    protected GetUsers(java.lang.String userName) {
      super(UsersApi.this, "GET", REST_PATH, null, com.example.joanmarc.myapplication.backend.usersApi.model.Users.class);
      this.userName = com.google.api.client.util.Preconditions.checkNotNull(userName, "Required parameter userName must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUsers setAlt(java.lang.String alt) {
      return (GetUsers) super.setAlt(alt);
    }

    @Override
    public GetUsers setFields(java.lang.String fields) {
      return (GetUsers) super.setFields(fields);
    }

    @Override
    public GetUsers setKey(java.lang.String key) {
      return (GetUsers) super.setKey(key);
    }

    @Override
    public GetUsers setOauthToken(java.lang.String oauthToken) {
      return (GetUsers) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUsers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUsers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUsers setQuotaUser(java.lang.String quotaUser) {
      return (GetUsers) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUsers setUserIp(java.lang.String userIp) {
      return (GetUsers) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userName;

    /**

     */
    public java.lang.String getUserName() {
      return userName;
    }

    public GetUsers setUserName(java.lang.String userName) {
      this.userName = userName;
      return this;
    }

    @Override
    public GetUsers set(String parameterName, Object value) {
      return (GetUsers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUsersByEmail".
   *
   * This request holds the parameters needed by the usersApi server.  After setting any optional
   * parameters, call the {@link GetUsersByEmail#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param password
   * @return the request
   */
  public GetUsersByEmail getUsersByEmail(java.lang.String email, java.lang.String password) throws java.io.IOException {
    GetUsersByEmail result = new GetUsersByEmail(email, password);
    initialize(result);
    return result;
  }

  public class GetUsersByEmail extends UsersApiRequest<com.example.joanmarc.myapplication.backend.usersApi.model.Users> {

    private static final String REST_PATH = "users/{email}/{password}";

    /**
     * Create a request for the method "getUsersByEmail".
     *
     * This request holds the parameters needed by the the usersApi server.  After setting any
     * optional parameters, call the {@link GetUsersByEmail#execute()} method to invoke the remote
     * operation. <p> {@link GetUsersByEmail#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param email
     * @param password
     * @since 1.13
     */
    protected GetUsersByEmail(java.lang.String email, java.lang.String password) {
      super(UsersApi.this, "GET", REST_PATH, null, com.example.joanmarc.myapplication.backend.usersApi.model.Users.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUsersByEmail setAlt(java.lang.String alt) {
      return (GetUsersByEmail) super.setAlt(alt);
    }

    @Override
    public GetUsersByEmail setFields(java.lang.String fields) {
      return (GetUsersByEmail) super.setFields(fields);
    }

    @Override
    public GetUsersByEmail setKey(java.lang.String key) {
      return (GetUsersByEmail) super.setKey(key);
    }

    @Override
    public GetUsersByEmail setOauthToken(java.lang.String oauthToken) {
      return (GetUsersByEmail) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUsersByEmail setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUsersByEmail) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUsersByEmail setQuotaUser(java.lang.String quotaUser) {
      return (GetUsersByEmail) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUsersByEmail setUserIp(java.lang.String userIp) {
      return (GetUsersByEmail) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public GetUsersByEmail setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public GetUsersByEmail setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public GetUsersByEmail set(String parameterName, Object value) {
      return (GetUsersByEmail) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertFriend".
   *
   * This request holds the parameters needed by the usersApi server.  After setting any optional
   * parameters, call the {@link InsertFriend#execute()} method to invoke the remote operation.
   *
   * @param userName
   * @param userNameFriend
   * @return the request
   */
  public InsertFriend insertFriend(java.lang.String userName, java.lang.String userNameFriend) throws java.io.IOException {
    InsertFriend result = new InsertFriend(userName, userNameFriend);
    initialize(result);
    return result;
  }

  public class InsertFriend extends UsersApiRequest<com.example.joanmarc.myapplication.backend.usersApi.model.Users> {

    private static final String REST_PATH = "friend";

    /**
     * Create a request for the method "insertFriend".
     *
     * This request holds the parameters needed by the the usersApi server.  After setting any
     * optional parameters, call the {@link InsertFriend#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertFriend#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param userName
     * @param userNameFriend
     * @since 1.13
     */
    protected InsertFriend(java.lang.String userName, java.lang.String userNameFriend) {
      super(UsersApi.this, "POST", REST_PATH, null, com.example.joanmarc.myapplication.backend.usersApi.model.Users.class);
      this.userName = com.google.api.client.util.Preconditions.checkNotNull(userName, "Required parameter userName must be specified.");
      this.userNameFriend = com.google.api.client.util.Preconditions.checkNotNull(userNameFriend, "Required parameter userNameFriend must be specified.");
    }

    @Override
    public InsertFriend setAlt(java.lang.String alt) {
      return (InsertFriend) super.setAlt(alt);
    }

    @Override
    public InsertFriend setFields(java.lang.String fields) {
      return (InsertFriend) super.setFields(fields);
    }

    @Override
    public InsertFriend setKey(java.lang.String key) {
      return (InsertFriend) super.setKey(key);
    }

    @Override
    public InsertFriend setOauthToken(java.lang.String oauthToken) {
      return (InsertFriend) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertFriend setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertFriend) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertFriend setQuotaUser(java.lang.String quotaUser) {
      return (InsertFriend) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertFriend setUserIp(java.lang.String userIp) {
      return (InsertFriend) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userName;

    /**

     */
    public java.lang.String getUserName() {
      return userName;
    }

    public InsertFriend setUserName(java.lang.String userName) {
      this.userName = userName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userNameFriend;

    /**

     */
    public java.lang.String getUserNameFriend() {
      return userNameFriend;
    }

    public InsertFriend setUserNameFriend(java.lang.String userNameFriend) {
      this.userNameFriend = userNameFriend;
      return this;
    }

    @Override
    public InsertFriend set(String parameterName, Object value) {
      return (InsertFriend) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUserRoute".
   *
   * This request holds the parameters needed by the usersApi server.  After setting any optional
   * parameters, call the {@link InsertUserRoute#execute()} method to invoke the remote operation.
   *
   * @param userName
   * @param routeId
   * @return the request
   */
  public InsertUserRoute insertUserRoute(java.lang.String userName, java.lang.Long routeId) throws java.io.IOException {
    InsertUserRoute result = new InsertUserRoute(userName, routeId);
    initialize(result);
    return result;
  }

  public class InsertUserRoute extends UsersApiRequest<com.example.joanmarc.myapplication.backend.usersApi.model.Users> {

    private static final String REST_PATH = "users/{userName}/{routeId}";

    /**
     * Create a request for the method "insertUserRoute".
     *
     * This request holds the parameters needed by the the usersApi server.  After setting any
     * optional parameters, call the {@link InsertUserRoute#execute()} method to invoke the remote
     * operation. <p> {@link InsertUserRoute#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param userName
     * @param routeId
     * @since 1.13
     */
    protected InsertUserRoute(java.lang.String userName, java.lang.Long routeId) {
      super(UsersApi.this, "POST", REST_PATH, null, com.example.joanmarc.myapplication.backend.usersApi.model.Users.class);
      this.userName = com.google.api.client.util.Preconditions.checkNotNull(userName, "Required parameter userName must be specified.");
      this.routeId = com.google.api.client.util.Preconditions.checkNotNull(routeId, "Required parameter routeId must be specified.");
    }

    @Override
    public InsertUserRoute setAlt(java.lang.String alt) {
      return (InsertUserRoute) super.setAlt(alt);
    }

    @Override
    public InsertUserRoute setFields(java.lang.String fields) {
      return (InsertUserRoute) super.setFields(fields);
    }

    @Override
    public InsertUserRoute setKey(java.lang.String key) {
      return (InsertUserRoute) super.setKey(key);
    }

    @Override
    public InsertUserRoute setOauthToken(java.lang.String oauthToken) {
      return (InsertUserRoute) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUserRoute setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUserRoute) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUserRoute setQuotaUser(java.lang.String quotaUser) {
      return (InsertUserRoute) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUserRoute setUserIp(java.lang.String userIp) {
      return (InsertUserRoute) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String userName;

    /**

     */
    public java.lang.String getUserName() {
      return userName;
    }

    public InsertUserRoute setUserName(java.lang.String userName) {
      this.userName = userName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long routeId;

    /**

     */
    public java.lang.Long getRouteId() {
      return routeId;
    }

    public InsertUserRoute setRouteId(java.lang.Long routeId) {
      this.routeId = routeId;
      return this;
    }

    @Override
    public InsertUserRoute set(String parameterName, Object value) {
      return (InsertUserRoute) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUsers".
   *
   * This request holds the parameters needed by the usersApi server.  After setting any optional
   * parameters, call the {@link InsertUsers#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.example.joanmarc.myapplication.backend.usersApi.model.Users}
   * @return the request
   */
  public InsertUsers insertUsers(com.example.joanmarc.myapplication.backend.usersApi.model.Users content) throws java.io.IOException {
    InsertUsers result = new InsertUsers(content);
    initialize(result);
    return result;
  }

  public class InsertUsers extends UsersApiRequest<com.example.joanmarc.myapplication.backend.usersApi.model.Users> {

    private static final String REST_PATH = "users";

    /**
     * Create a request for the method "insertUsers".
     *
     * This request holds the parameters needed by the the usersApi server.  After setting any
     * optional parameters, call the {@link InsertUsers#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertUsers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.example.joanmarc.myapplication.backend.usersApi.model.Users}
     * @since 1.13
     */
    protected InsertUsers(com.example.joanmarc.myapplication.backend.usersApi.model.Users content) {
      super(UsersApi.this, "POST", REST_PATH, content, com.example.joanmarc.myapplication.backend.usersApi.model.Users.class);
    }

    @Override
    public InsertUsers setAlt(java.lang.String alt) {
      return (InsertUsers) super.setAlt(alt);
    }

    @Override
    public InsertUsers setFields(java.lang.String fields) {
      return (InsertUsers) super.setFields(fields);
    }

    @Override
    public InsertUsers setKey(java.lang.String key) {
      return (InsertUsers) super.setKey(key);
    }

    @Override
    public InsertUsers setOauthToken(java.lang.String oauthToken) {
      return (InsertUsers) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUsers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUsers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUsers setQuotaUser(java.lang.String quotaUser) {
      return (InsertUsers) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUsers setUserIp(java.lang.String userIp) {
      return (InsertUsers) super.setUserIp(userIp);
    }

    @Override
    public InsertUsers set(String parameterName, Object value) {
      return (InsertUsers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUserRoutes".
   *
   * This request holds the parameters needed by the usersApi server.  After setting any optional
   * parameters, call the {@link ListUserRoutes#execute()} method to invoke the remote operation.
   *
   * @param count
   * @param userId
   * @return the request
   */
  public ListUserRoutes listUserRoutes(java.lang.Integer count, java.lang.String userId) throws java.io.IOException {
    ListUserRoutes result = new ListUserRoutes(count, userId);
    initialize(result);
    return result;
  }

  public class ListUserRoutes extends UsersApiRequest<com.example.joanmarc.myapplication.backend.usersApi.model.RouteCollection> {

    private static final String REST_PATH = "user/routes";

    /**
     * Create a request for the method "listUserRoutes".
     *
     * This request holds the parameters needed by the the usersApi server.  After setting any
     * optional parameters, call the {@link ListUserRoutes#execute()} method to invoke the remote
     * operation. <p> {@link ListUserRoutes#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param count
     * @param userId
     * @since 1.13
     */
    protected ListUserRoutes(java.lang.Integer count, java.lang.String userId) {
      super(UsersApi.this, "GET", REST_PATH, null, com.example.joanmarc.myapplication.backend.usersApi.model.RouteCollection.class);
      this.count = com.google.api.client.util.Preconditions.checkNotNull(count, "Required parameter count must be specified.");
      this.userId = com.google.api.client.util.Preconditions.checkNotNull(userId, "Required parameter userId must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUserRoutes setAlt(java.lang.String alt) {
      return (ListUserRoutes) super.setAlt(alt);
    }

    @Override
    public ListUserRoutes setFields(java.lang.String fields) {
      return (ListUserRoutes) super.setFields(fields);
    }

    @Override
    public ListUserRoutes setKey(java.lang.String key) {
      return (ListUserRoutes) super.setKey(key);
    }

    @Override
    public ListUserRoutes setOauthToken(java.lang.String oauthToken) {
      return (ListUserRoutes) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUserRoutes setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUserRoutes) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUserRoutes setQuotaUser(java.lang.String quotaUser) {
      return (ListUserRoutes) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUserRoutes setUserIp(java.lang.String userIp) {
      return (ListUserRoutes) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer count;

    /**

     */
    public java.lang.Integer getCount() {
      return count;
    }

    public ListUserRoutes setCount(java.lang.Integer count) {
      this.count = count;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userId;

    /**

     */
    public java.lang.String getUserId() {
      return userId;
    }

    public ListUserRoutes setUserId(java.lang.String userId) {
      this.userId = userId;
      return this;
    }

    @Override
    public ListUserRoutes set(String parameterName, Object value) {
      return (ListUserRoutes) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link UsersApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link UsersApi}. */
    @Override
    public UsersApi build() {
      return new UsersApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link UsersApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setUsersApiRequestInitializer(
        UsersApiRequestInitializer usersapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(usersapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
