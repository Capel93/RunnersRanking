/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-03-26 20:30:19 UTC)
 * on 2015-05-03 at 20:05:00 UTC 
 * Modify at your own risk.
 */

package com.example.joanmarc.myapplication.backend.usersApi.model;

/**
 * Model definition for Route.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the usersApi. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Route extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double calories;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private com.google.api.client.util.DateTime date;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double distance;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String finishPoint;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Double> latitudes;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Double> longitudes;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Double> rates;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String startPoint;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long time;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userName;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getCalories() {
    return calories;
  }

  /**
   * @param calories calories or {@code null} for none
   */
  public Route setCalories(java.lang.Double calories) {
    this.calories = calories;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public com.google.api.client.util.DateTime getDate() {
    return date;
  }

  /**
   * @param date date or {@code null} for none
   */
  public Route setDate(com.google.api.client.util.DateTime date) {
    this.date = date;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getDistance() {
    return distance;
  }

  /**
   * @param distance distance or {@code null} for none
   */
  public Route setDistance(java.lang.Double distance) {
    this.distance = distance;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getFinishPoint() {
    return finishPoint;
  }

  /**
   * @param finishPoint finishPoint or {@code null} for none
   */
  public Route setFinishPoint(java.lang.String finishPoint) {
    this.finishPoint = finishPoint;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Route setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Double> getLatitudes() {
    return latitudes;
  }

  /**
   * @param latitudes latitudes or {@code null} for none
   */
  public Route setLatitudes(java.util.List<java.lang.Double> latitudes) {
    this.latitudes = latitudes;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Double> getLongitudes() {
    return longitudes;
  }

  /**
   * @param longitudes longitudes or {@code null} for none
   */
  public Route setLongitudes(java.util.List<java.lang.Double> longitudes) {
    this.longitudes = longitudes;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Double> getRates() {
    return rates;
  }

  /**
   * @param rates rates or {@code null} for none
   */
  public Route setRates(java.util.List<java.lang.Double> rates) {
    this.rates = rates;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getStartPoint() {
    return startPoint;
  }

  /**
   * @param startPoint startPoint or {@code null} for none
   */
  public Route setStartPoint(java.lang.String startPoint) {
    this.startPoint = startPoint;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getTime() {
    return time;
  }

  /**
   * @param time time or {@code null} for none
   */
  public Route setTime(java.lang.Long time) {
    this.time = time;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUserName() {
    return userName;
  }

  /**
   * @param userName userName or {@code null} for none
   */
  public Route setUserName(java.lang.String userName) {
    this.userName = userName;
    return this;
  }

  @Override
  public Route set(String fieldName, Object value) {
    return (Route) super.set(fieldName, value);
  }

  @Override
  public Route clone() {
    return (Route) super.clone();
  }

}
